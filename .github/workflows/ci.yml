name: "Electron Builder App CI Pipeline"

on:
  workflow_dispatch

jobs:
  # lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Setup Node
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '18'
          
  #     - name: Install dependencies
  #       run: npm install

  #     - 

  vuln_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

    # For the sake of the take home we'll force this to always pass
    # But typically these should be resolved where possible or a 
    # Security exception is filed as a ticket with plat sec :) 
      - name: Run npm audit for a basic vuln scan
        run: npm audit || true

      - name: Run Elctronegativity 
        run: npm run electronegativity
      ## We could use something more comprehensive like Snyk or Trivy
      ## Not sure if they're free..

  # We'd probably run some form of tests here before we do a build to ensure
  # That our app code still works properly but we don't have any tests lol 

  build:
    runs-on: ubuntu-latest
    needs: [vuln_scan]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Build Electron app
        run: npm run build

      - name: Package Electron app as .tar.gz
        run: npx electron-builder --linux tar.gz

      - name: Upload packaged artifact
        uses: actions/upload-artifact@v4
        with:
          name: electron-secure-defaults-tar
          path: dist/*.tar.gz

  # package:
  #   runs-on: ubuntu-latest
  #   needs: test
  #   steps:
  #     # Package steps here

  # containerize:
  #   runs-on: ubuntu-latest
  #   needs: package
  #   steps:
  #     # Docker build steps here

  # notify:
  #   runs-on: ubuntu-latest
  #   needs: [package, containerize]
  #   steps:
  #     # Notification steps here
